// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _03Project.DataAccessLayer.Context.EF;

#nullable disable

namespace _03Project.DataAccessLayer.Migrations
{
    [DbContext(typeof(EfDbContext))]
    partial class EfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_06Project.Entities.Concrete.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Calorie")
                        .HasColumnType("int");

                    b.Property<int>("Carbs")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fats")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calorie = 1000,
                            Carbs = 500,
                            Created = new DateTime(2024, 1, 28, 20, 32, 55, 516, DateTimeKind.Local).AddTicks(4114),
                            DataStatus = 0,
                            Description = "120g meat with cheese",
                            Fats = 250,
                            Name = "Hamburger",
                            Protein = 250
                        },
                        new
                        {
                            Id = 2,
                            Calorie = 1200,
                            Carbs = 600,
                            Created = new DateTime(2024, 1, 28, 20, 32, 55, 516, DateTimeKind.Local).AddTicks(4116),
                            DataStatus = 0,
                            Description = "Mixed pizza",
                            Fats = 300,
                            Name = "Pizza",
                            Protein = 300
                        });
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.MealTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MealTimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 1, 28, 20, 32, 55, 516, DateTimeKind.Local).AddTicks(4107),
                            DataStatus = 0,
                            MealName = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 1, 28, 20, 32, 55, 516, DateTimeKind.Local).AddTicks(4108),
                            DataStatus = 0,
                            MealName = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 1, 28, 20, 32, 55, 516, DateTimeKind.Local).AddTicks(4108),
                            DataStatus = 0,
                            MealName = "Dinner"
                        });
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.PortionSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PortionInGrams")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PortionSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 1, 28, 20, 32, 55, 516, DateTimeKind.Local).AddTicks(4035),
                            DataStatus = 0,
                            PortionInGrams = 100
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 1, 28, 20, 32, 55, 516, DateTimeKind.Local).AddTicks(4043),
                            DataStatus = 0,
                            PortionInGrams = 120
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 1, 28, 20, 32, 55, 516, DateTimeKind.Local).AddTicks(4044),
                            DataStatus = 0,
                            PortionInGrams = 140
                        });
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GoalWeight")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.UserFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("MealTimeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PortionSizeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("MealTimeId");

                    b.HasIndex("PortionSizeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFoods");
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.UserFood", b =>
                {
                    b.HasOne("_06Project.Entities.Concrete.Food", "Food")
                        .WithMany("UserFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_06Project.Entities.Concrete.MealTime", "MealTime")
                        .WithMany("UserFoods")
                        .HasForeignKey("MealTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_06Project.Entities.Concrete.PortionSize", "PortionSize")
                        .WithMany("UserFoods")
                        .HasForeignKey("PortionSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_06Project.Entities.Concrete.User", "User")
                        .WithMany("UserFoods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("MealTime");

                    b.Navigation("PortionSize");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.Food", b =>
                {
                    b.Navigation("UserFoods");
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.MealTime", b =>
                {
                    b.Navigation("UserFoods");
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.PortionSize", b =>
                {
                    b.Navigation("UserFoods");
                });

            modelBuilder.Entity("_06Project.Entities.Concrete.User", b =>
                {
                    b.Navigation("UserFoods");
                });
#pragma warning restore 612, 618
        }
    }
}
